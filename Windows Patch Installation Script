#Windows Patch Installation Script,Script need to be adjusted as per your requirement , its just a skeleton 
#--------------------------------------------------------------------------
#Script  : Windows Patch Installation Script.ps1 
#Author  : chandrashekharbhat@rocketmail.com  
#Version : 0.1
#Description : Validate the pactches on the VM and install it.
#--------------------------------------------------------------------------

$Logfile = "C:\patch_installation.log"
function WriteLog
{
Param ([string]$LogString)
$Stamp = (Get-Date).toString("yyyy/MM/dd HH:mm:ss")
$LogMessage = "$Stamp $LogString"
Add-content $LogFile -value $LogMessage
}

#Counter declaration and Initialization
$SSU_Count = 0
$Mandatory_Count_A =0
$Mandatory_Count_B =0
$CU_Count =0
$VM = hostname

#Define Mandatory KB, In this example taken two mandatory KBs which are not part of CU. If you have more define and adjust the script accordingly
$Mandatory_KB_A ='Mandatory_KB_A'
$Mandatory_KB_B ='Mandatory_KB_B'

#Define SSU
$SSU_KB_Number = 'SSU_KB'

#Define CU 
$CU_KB_Number = 'CU_KB'


#Get installed hotfixes
$installedKB = (get-hotfix | Select-Object  HotFixID).HotfixID

#Verify the SSU Installed or not

foreach ($SSU in $installedKB ){
 if( $SSU -eq $SSU_KB_Number){
  #Write-Host "SSU Counter"
  $SSU_Count++
}
}

#SSU Installation
 if ($SSU_Count -ne 1){
 Write-Host "Installing SSU $SSU_KB_Number"
 WriteLog "Installing SSU $SSU_KB_Number"
 #Download the SU and Install
 #Append the Download command
 


 #Installation commands
 Start-Process -wait wusa -ArgumentList "/update C:/SSU_KB.msu","/quiet","/norestart"
 $SUconfirm = Read-Host "Are you sure you want to restart the host $VM? (Yes/No)"
 if($SUconfirm -eq "Yes") {
    Restart-Computer -WhatIf:$false -Confirm:$false
}
 }
 else{
  Write-Host "SSU $SSU_KB_Number Already Present"
  WriteLog "SSU $SSU_KB_Number Already Present"
 }
 
#Verify the Mandatory Kbs Installed or not



foreach ($Mandatory in $installedKB ){
 if($Mandatory  -eq $Mandatory_KB_A ){
   $Mandatory_Count_A++
}
}

foreach ($Mandatory in $installedKB ){
 if($Mandatory  -eq $Mandatory_KB_B ){
   $Mandatory_Count_B++
}
}

#installing Mandatory Mandatory_KB_A
    if($Mandatory_Count_A -ne 1){
    Write-Host "Installing Mandatory $Mandatory_KB_A"
    WriteLog "Installing Mandatory $Mandatory_KB_A"
    #Download the Mandatory KBXXXXXXX and Install
     #Append the Download command
       
       
         
     #Installation commands
    Start-Process -wait wusa -ArgumentList "/update C:/Mandatory_KB_A.msu","/quiet","/norestart"
    }
  else{
     Write-Host "Mandatory $Mandatory_KB_A Already Present"
     WriteLog "Mandatory $Mandatory_KB_A Already Present"
  }
#installing Mandatory Mandatory_KB_B
if($Mandatory_Count_B -ne 1){
   Write-Host "Installing Mandatory $Mandatory_KB_B"
   WriteLog "Installing Mandatory $Mandatory_KB_B"
   #Download the Mandatory KBXXXXXXY and Install
   #Append the Download 
   


   #Installation commands
   Start-Process -wait wusa -ArgumentList "/update C:/Mandatory_KB_B.msu","/quiet","/norestart"
    }
  else{
  Write-Host "Mandatory $Mandatory_KB_B Already Present"
  WriteLog "Mandatory $Mandatory_KB_B Already Present"
  }
    
#Verify the CU Installtion

foreach ($CU in $installedKB ){
  if( $CU -eq $CU_KB_Number){
   #Write-Host "CU Counter"
   $CU_Count++
 }
 }

#Install the CU
  if ($CU_Count -ne 1){
    $SSUInstalled = (get-hotfix -ID $SSU_KB_Number -ErrorAction SilentlyContinue).HotfixID 
      if ($SSUInstalled -eq $SSU_KB_Number){
          #Download the CU and Install
          Write-Host "Installing CU $CU_KB_Number"
          WriteLog "Installing CU $CU_KB_Number"
          #Append the Download command
          


          #Installation commands
          Start-Process -wait wusa -ArgumentList "/update C:/CU_KB.msu","/quiet","/norestart"
          $CUconfirm = Read-Host "Are you sure you want to restart the VM $VM ? (Yes/No)"
          if($CUconfirm -eq "Yes") {
          Restart-Computer -WhatIf:$false -Confirm:$false
          }
         }
         else{
  Write-Host "Install SSU First $SSU_KB_Number"
  WriteLog "Install SSU First $SSU_KB_Number"
  }
  }
  else{
  Write-Host "CU $CU_KB_Number Already Present"
  WriteLog "CU $CU_KB_Number Already Present"
  }
